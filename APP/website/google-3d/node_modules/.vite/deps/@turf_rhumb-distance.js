import {
  convertLength,
  earthRadius,
  getCoord
} from "./chunk-AP7LFQZT.js";
import "./chunk-ZC22LKFR.js";

// node_modules/@turf/rhumb-distance/dist/es/index.js
function rhumbDistance(from, to, options) {
  if (options === void 0) {
    options = {};
  }
  var origin = getCoord(from);
  var destination = getCoord(to);
  destination[0] += destination[0] - origin[0] > 180 ? -360 : origin[0] - destination[0] > 180 ? 360 : 0;
  var distanceInMeters = calculateRhumbDistance(origin, destination);
  var distance = convertLength(distanceInMeters, "meters", options.units);
  return distance;
}
function calculateRhumbDistance(origin, destination, radius) {
  radius = radius === void 0 ? earthRadius : Number(radius);
  var R = radius;
  var phi1 = origin[1] * Math.PI / 180;
  var phi2 = destination[1] * Math.PI / 180;
  var DeltaPhi = phi2 - phi1;
  var DeltaLambda = Math.abs(destination[0] - origin[0]) * Math.PI / 180;
  if (DeltaLambda > Math.PI) {
    DeltaLambda -= 2 * Math.PI;
  }
  var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));
  var q = Math.abs(DeltaPsi) > 1e-11 ? DeltaPhi / DeltaPsi : Math.cos(phi1);
  var delta = Math.sqrt(DeltaPhi * DeltaPhi + q * q * DeltaLambda * DeltaLambda);
  var dist = delta * R;
  return dist;
}
var es_default = rhumbDistance;
export {
  es_default as default
};
//# sourceMappingURL=@turf_rhumb-distance.js.map
